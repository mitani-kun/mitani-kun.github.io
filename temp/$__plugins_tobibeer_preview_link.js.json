[
    {
        "text": "/*\\\ntitle: $:/plugins/tobibeer/preview/link.js\ntype: application/javascript\nmodule-type: startup\n\nEnhances the link widget for on-hover previews\n\n@preserve\n\\*/\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\n(function(){\n\nvar\n\t// Global flag to stop mouseover madness\n\tblock,\n\t// Get core link widget\n\tCoreLink = require(\"$:/core/modules/widgets/link.js\").link,\n\t// Store ref to render() and handleClickEvent()\n\trenderCore = CoreLink.prototype.render,\n\tclickCore = CoreLink.prototype.handleClickEvent;\n\nvar currentMouseOverEventHandler;\nvar popupIsShowed;\n\t\n// Hijack core link widget render()\nCoreLink.prototype.render = function() {\n\t// Run core handler\n\trenderCore.apply(this,arguments);\n\tvar self = this,\n\t\twiki = this.wiki,\n\t\t// The link node\n\t\tel = this.domNodes[0],\n\t\t// Target tiddler\n\t\tto = wiki.getTiddler(self.to),\n\t\t// Shortcut to defaults namespace\n\t\tdefaults = \"$:/plugins/tobibeer/preview/defaults/\",\n\t\t// Shortcut to preview namespace\n\t\tpreview = \"$:/temp/tobibeer/preview-\",\n\t\t// Modifier keys to quick-show the popup w/o delay\n\t\tkeys = $tw.utils.parseKeyDescriptorTB(wiki.getTextReference(defaults+\"keys\",\"\").toUpperCase()),\n\t\t// Delay for popup rendering\n\t\tdelay = wiki.getTextReference(defaults+\"delay\").toUpperCase(),\n\t\t//Check if popup already open\n\t\tgetInfo = function(el) {\n\t\t\t// Get current popup level\n\t\t\tvar info = $tw.popup.popupInfo(el),\n\t\t\t\t// Get current popup level\n\t\t\t\tlevel = info.popupLevel;\n\t\t\treturn (\n\t\t\t\twiki.getTextReference(preview+level) &&\n\t\t\t\twiki.getTextReference(preview+level+\"-tiddler\") === self.to ?\n\t\t\t\tnull :\n\t\t\t\tinfo\n\t\t\t);\n\t\t},\n\t\t// Displays the preview popup\n\t\tshowPopup = function() {\n\t\t\tvar level,\n\t\t\t\t// Get info (only if not open yet)\n\t\t\t\tinfo = getInfo(el);\n\t\t\t// Not open yet and not yet blocking mouseover madness?\n\t\t\tif(info) {\n\t\t\t\t// Get current popup level\n\t\t\t\tlevel = info.popupLevel;\n\t\t\t\t// Stop waiting for other popups to pop up\n\t\t\t\tclearTimeout(self.previewTimeout);\n\t\t\t\t// Quite all of outer level\n\t\t\t\t$tw.popup.cancel(level);\n\t\t\t\tpopupIsShowed = false;\n\t\t\t\t// Level up\n\t\t\t\tlevel++;\n\t\t\t\t// Store reference to tiddler to be previewed for level\n\t\t\t\twiki.setText(preview+level+\"-tiddler\",\"text\",null,self.to);\n\t\t\t\t// Store the popup details if not already there\n\t\t\t\tif($tw.popup.findPopup(preview+level) === -1) {\n\t\t\t\t\t// Show popup with timeout, to get past nextTick\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t// Core popup triggering\n\t\t\t\t\t\t$tw.popup.triggerPopup({\n\t\t\t\t\t\t\t// For this tiddler\n\t\t\t\t\t\t\tdomNode: el,\n\t\t\t\t\t\t\t// The state for this level\n\t\t\t\t\t\t\ttitle: preview+level,\n\t\t\t\t\t\t\twiki: wiki\n\t\t\t\t\t\t});\n\t\t\t\t\t\tpopupIsShowed = true;\n\t\t\t\t\t\tblock = 0;\n\t\t\t\t\t},50);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// A helper to determine whether or not to actually show the popup\n\t\tshow = function (){\n\t\t\tvar ex,exclude,\n\t\t\t\t// By default, show\n\t\t\t\tdoShow = 1,\n\t\t\t\t// The css classes in which not to display previews for links\n\t\t\t\tnot = wiki.getTextReference(defaults+\"not\",\"\");\n\t\t\t// Got any?\n\t\t\tif(not) {\n\t\t\t\t// Split classes and loop\n\t\t\t\t$tw.utils.each(not.split(\" \"),function(n){\n\t\t\t\t\t// This node\n\t\t\t\t\tvar node = el;\n\t\t\t\t\t// Loop so long as parent-nodes and still displaying\n\t\t\t\t\twhile(node && doShow) {\n\t\t\t\t\t\t// Node has exclude-class?\n\t\t\t\t\t\tif($tw.utils.hasClass(node,n)){\n\t\t\t\t\t\t\t// Ok, so we're not showing\n\t\t\t\t\t\t\tdoShow = 0;\n\t\t\t\t\t\t\t// Stop iterating\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Next partent\n\t\t\t\t\t\tnode = node.parentNode;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Not aborted yet?\n\t\t\tif(doShow) {\n\t\t\t\t// get exclude filter\n\t\t\t\texclude = wiki.getTextReference(defaults+\"exclude\",\"\");\n\t\t\t\t// Fetch excluded titles\n\t\t\t\tex = exclude ? wiki.filterTiddlers(exclude) : [];\n\t\t\t\t// Title in excludes?\n\t\t\t\tif(ex.indexOf(self.to) >= 0) {\n\t\t\t\t\t// Then don't display\n\t\t\t\t\tdoShow = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Return what we got\n\t\t\treturn doShow;\n\t\t};\n\t// Turn delay to integer\n\tdelay = delay !== undefined ? parseInt(delay) : null;\n\t// Not a number?\n\tif(delay !== null && isNaN(delay)) {\n\t\t// No delay\n\t\tdelay = 0;\n\t}\n\t// Target tiddler exists?\n\tif(to) {\n\t\t// Add handle class\n\t\t$tw.utils.addClass(el,\"tc-popup-handle\");\n\t\t// Add absolute positioning class\n\t\t$tw.utils.addClass(el,\"tc-popup-absolute\");\n\t\tvar mouseOverEventHandler;\n\t\tmouseOverEventHandler = function(e, event) {\n\t\t\t// Ref to event\n\t\t\tvar ev = event || window.event;\n\t\t\t// On mouseover\n\t\t\tif(e === \"mouseover\") {\n\t\t\t\tcurrentMouseOverEventHandler = mouseOverEventHandler;\n\t\t\t\twindow.focus();\n\t\t\t\t// Actually showing anything?\n\t\t\t\tif(show()) {\n\t\t\t\t\t// No keycode?\n\t\t\t\t\tif(!ev.keyCode) {\n\t\t\t\t\t\t// Set to 0, for whatever reason the core expects one\n\t\t\t\t\t\tev.keyCode = 0;\n\t\t\t\t\t}\n\t\t\t\t\t// Modifier keys say we show directly?\n\t\t\t\t\tif(!$tw.utils.checkKeyDescriptorTB(ev,keys)) {\n\t\t\t\t\t\t// Not yet blocking mousover madness?\n\t\t\t\t\t\tif(!block) {\n\t\t\t\t\t\t\t// Block further firing of mouseover events\n\t\t\t\t\t\t\tblock = 1;\n\t\t\t\t\t\t\t// Then show\n\t\t\t\t\t\t\t//showPopup();\n\t\t\t\t\t\t}\n\t\t\t\t\t// Modifiers don't match but we got a delay?\n\t\t\t\t\t} else if(delay !== null) {\n\t\t\t\t\t\t// No more blocking of mouseover events\n\t\t\t\t\t\tblock = 0;\n\t\t\t\t\t\t// Set timeout and wait to show popup\n\t\t\t\t\t\tself.previewTimeout = setTimeout(showPopup,delay);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t// Mouseout\n\t\t\t} else {\n\t\t\t\tcurrentMouseOverEventHandler = null;\n\t\t\t\t// No more blocking of mouseover events\n\t\t\t\tblock = 0;\n\t\t\t\t// No more waiting for the popup\n\t\t\t\tclearTimeout(self.previewTimeout);\n\t\t\t}\n\t\t};\n\t\t// Loop new event handlers\n\t\t[\"mouseover\",\"mouseout\"].forEach(function(e) {\n\t\t\t// Create event listener\n\t\t\tel.addEventListener(e, function(event){\n\t\t\t\tmouseOverEventHandler(e, event);\n\t\t\t});\n\t\t});\n\t}\n};\n\n// Hijack click handler\nCoreLink.prototype.handleClickEvent = function() {\n\t// Run core handler\n\tclickCore.apply(this,arguments);\n\tif (popupIsShowed) {\n\t\t// Abort popup delay timeout\n\t\tclearTimeout(this.previewTimeout);\n\t\t// Close popups\n\t\t$tw.popup.cancel(\n\t\t\tMath.max(\n\t\t\t\t0,\n\t\t\t\t$tw.popup.popupInfo(this.domNodes[0]).popupLevel\n\t\t\t)\n\t\t);\n\t\tpopupIsShowed = false;\n\t}\n};\n\nvar keyPressed = false;\n\nwindow.addEventListener('keydown',function(e){\n\tif (keyPressed) return;\n\tkeyPressed = true;\n\t\n\tif (currentMouseOverEventHandler) {\n\t\tcurrentMouseOverEventHandler(\"mouseover\", null);\n\t}\n});\n\nwindow.addEventListener('keyup',function(e){\n\tkeyPressed = false;\n\t\n\tif (popupIsShowed) {\n\t\t// Abort popup delay timeout\n\t\tclearTimeout(this.previewTimeout);\n\t\t// Close popups\n\t\t$tw.popup.cancel(\n\t\t\tMath.max(\n\t\t\t\t0,\n\t\t\t\t0//$tw.popup.popupInfo(this.domNodes[0]).popupLevel\n\t\t\t)\n\t\t);\n\t\tpopupIsShowed = false;\n\t}\n});\n\n})();",
        "type": "application/javascript",
        "title": "$:/plugins/tobibeer/preview/link.js",
        "module-type": "startup",
        "modified": "20181008102214275",
        "created": "20181008070813322"
    }
]